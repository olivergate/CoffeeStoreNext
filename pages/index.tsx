import axios from 'axios';
import type { NextPage, GetStaticProps } from 'next';
import Head from 'next/head';
import Image from 'next/image';
import { Banner } from '../components/banner';
import Card from '../components/card';
import styles from '../styles/Home.module.css';
import { StoreImage, fsq_get, getNearby, getPhotos, defaultPhoto, getCoffeeStores } from '../axios';
import { useLocation } from '../hooks/use-location';
import { useContext, useEffect } from 'react';
import React from 'react';
import { StoreContext } from '../context/storeContext';
import { CreateBody } from './api/createCoffeeStore';

export interface FourSquareVenue {
  fsq_id: string;
  categories: {
    id: number;
    name: string;
    icon: {
      prefix: string;
      suffix: string;
    };
  }[];
  chains: any[];
  distance: number;
  geocodes: {
    main: {
      latitude: number;
      longitude: number;
    };
  };
  location: {
    address: string;
    country: string;
    cross_street: string;
    dma: string;
    formatted_address: string;
    locality: string;
    neighborhood: string;
    postcode: string;
    region: string;
  };
  name: string;
  related_places: {};
  timezone: string;
  photo: string;
}

export interface CoffeeStore extends CreateBody {}

interface Props {
  coffeeStores: CoffeeStore[];
}

export const getStaticProps: GetStaticProps = async context => {
  const result = await getNearby('41.8781,-87.6298', 'coffee store');
  return {
    props: { coffeeStores: result },
  };
};

const Home: NextPage<Props> = props => {
  const location = useLocation();
  const { state, dispatch } = useContext(StoreContext);
  if (!dispatch) {
    throw new Error('WHAT THE HECCCCK');
  }
  const getAndSetLocalStores = async () => {
    const result = await getCoffeeStores(state.latlong, 20);
    dispatch({ type: 'SET_COFFEE_STORES', payload: result.data.coffeeStores });
  };

  useEffect(() => {
    if (!!state.latlong) {
      getAndSetLocalStores();
    }
  }, [state.latlong]);

  return (
    <div className={styles.container}>
      <Head>
        <title>Coffee application</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={styles.main}>
        <Banner location={location} />
        {location.errorMessage && <span>Something went wrong: {location.errorMessage}</span>}
        <div className={styles.heroImage}>
          <Image src="/static/hero-image.png" width={700} height={500} />
        </div>
        {state.localStores.length > 0 && (
          <div className={styles.sectionWrapper}>
            <h2 className={styles.heading2}>{'Your Local coffee stores'}</h2>
            <div className={styles.cardLayout}>
              {state.localStores.map(x => {
                return (
                  <div key={x.id} className={styles.card}>
                    <Card href={`coffee-store/${x.id}`} imageUrl={x.imgUrl} name={x.name} />
                  </div>
                );
              })}
            </div>
          </div>
        )}
        {props.coffeeStores.length > 0 && (
          <div className={styles.sectionWrapper}>
            <h2 className={styles.heading2}>Our favourite coffee Stores</h2>
            <div className={styles.cardLayout}>
              {props.coffeeStores.map(x => {
                return (
                  <div key={x.id} className={styles.card}>
                    <Card href={`coffee-store/${x.id}`} imageUrl={x.imgUrl} name={x.name} />
                  </div>
                );
              })}
            </div>
          </div>
        )}
      </main>
    </div>
  );
};

export default Home;
